@page
@model HrmApp.Web.Pages.Employees.ListModel
@{
    ViewData["Title"] = "Employee List";
}

<h3>@ViewBag.Title</h3>

<hr />

<!-- Page Size Selector -->
<div class="row">
    <div class="col">
        <div class="form-group">
            <label>Show</label>
            <select class="form-control-sm" onchange="changePageSize(this)">
                <option value="5" selected="@(Model.PagedEmployees.PageSize == 5)">5</option>
                <option value="10" selected="@(Model.PagedEmployees.PageSize == 10)">10</option>
                <option value="20" selected="@(Model.PagedEmployees.PageSize == 20)">20</option>
                <option value="50" selected="@(Model.PagedEmployees.PageSize == 50)">50</option>
            </select>
            <label>records per page</label>
        </div>
    </div>
    <div class="col">
        Total Employees: @Model.PagedEmployees.TotalCount
    </div>
</div>


<table class="table-responsive" width="100%">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Email
            </th>
            <th>
                Department
            </th>
            <th>
                Start Date
            </th>
            <th>
                Active
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.PagedEmployees.Items)
        {
            <tr>
                <td>
                    <a asp-page="./Details" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Name)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination Controls -->
<nav aria-label="Employee pagination">
    <ul class="pagination">
        <li class="page-item @(!Model.PagedEmployees.HasPreviousPage ? "disabled" : "")">
            <a class="page-link"
               asp-page="./List"
               asp-route-currentPage="@(Model.PagedEmployees.PageNumber - 1)"
               asp-route-pageSize="@Model.PagedEmployees.PageSize">Previous</a>
        </li>

        @for (var i = 1; i <= Model.PagedEmployees.TotalPages; i++)
        {
            <li class="page-item @(i == Model.PagedEmployees.PageNumber ? "active" : "")">
                <a class="page-link"
                   asp-page="./List"
                   asp-route-currentPage="@i"
                   asp-route-pageSize="@Model.PagedEmployees.PageSize">@i</a>
            </li>
        }

        <li class="page-item @(!Model.PagedEmployees.HasNextPage ? "disabled" : "")">
            <a class="page-link"
               asp-page="./List"
               asp-route-currentPage="@(Model.PagedEmployees.PageNumber + 1)"
               asp-route-pageSize="@Model.PagedEmployees.PageSize">Next</a>
        </li>
    </ul>
</nav>



@section Scripts {
    <script>
        function changePageSize(select) {
            const pageSize = select.value;
            const url = new URL(window.location.href);
            url.searchParams.set('pageSize', pageSize);
            url.searchParams.set('currentPage', 1); // Reset to first page
            window.location.href = url.toString();
        }
    </script>
}